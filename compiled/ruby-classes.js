// Generated by CoffeeScript 1.6.3
(function() {
  var json_file, navigate, root_url, search, set_description, updateDefaultSuggestion, version;

  root_url = "http://ruby-doc.org/core-2.0/";

  version = "Ruby Core 2.0";

  json_file = "ruby-classes.json";

  set_description = function(name, url) {
    return "<match>" + name + "</match> <dim>" + version + " - </dim><url>" + url + "</url>";
  };

  navigate = function(url) {
    return chrome.tabs.query({
      active: true,
      currentWindow: true
    }, function(tabs) {
      return chrome.tabs.update(tabs[0].id, {
        url: url
      });
    });
  };

  search = function(query, callback) {
    var req;
    req = new XMLHttpRequest();
    req.open("GET", json_file, true);
    req.setRequestHeader("GData-Version", "2");
    req.onreadystatechange = function() {
      var json;
      if (req.readyState === 4) {
        json = JSON.parse(req.response);
        window.test = json['classes'].filter(function(e, i, a) {
          var re;
          re = new RegExp(query, 'gi');
          if (Object.prototype.toString.call(e.name.match(re)) === '[object Array]') {
            return e;
          }
        });
        return callback(window.test);
      }
    };
    req.send(null);
    return req;
  };

  updateDefaultSuggestion = function(element) {
    var url;
    url = "" + root_url + element['urlpath'];
    return chrome.omnibox.setDefaultSuggestion({
      description: set_description(element['name'], url)
    });
  };

  chrome.omnibox.onInputChanged.addListener(function(text, suggest) {
    return search(text, function(elements) {
      var element, i, results, url, _i, _len;
      results = [];
      for (i = _i = 0, _len = elements.length; _i < _len; i = ++_i) {
        element = elements[i];
        if (i === 0) {
          updateDefaultSuggestion(element);
        } else {
          url = "" + root_url + element['urlpath'];
          results.push({
            content: url,
            description: set_description(element['name'], url)
          });
        }
      }
      suggest(results);
      return console.log("Input Changed: " + text);
    });
  });

  chrome.omnibox.onInputEntered.addListener(function(text) {
    console.log(text);
    if (text.indexOf("http") !== -1) {
      return navigate(text);
    } else {
      return search(text, function(elements) {
        var element, url;
        element = elements[0];
        url = "" + root_url + element['urlpath'];
        return navigate(url);
      });
    }
  });

}).call(this);
